
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin
    function isAdmin() {
      // The admin email is passed from the environment variable
      // Ensure this environment variable is set in your deployment environment.
      // In Firebase Studio, it is automatically fetched.
      return request.auth != null && request.auth.token.email == get(/environments/private).NEXT_PUBLIC_ADMIN_EMAIL;
    }

    // Products are publicly readable, but only admins can write.
    match /shoes/{shoeId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Categories are publicly readable, but only admins can write.
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Promo Codes can be read by anyone, but only written by admins.
    match /promoCodes/{promoCodeId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users can only read/write their own data.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Preferences are a subcollection of users.
      match /preferences/{preferenceId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Orders can be created by any authenticated user.
    // They can only be read by their owner or an admin.
    // They can only be updated/deleted by an admin.
    match /orders/{orderId} {
      allow create: if request.auth != null;
      allow read, list: if (request.auth != null && request.auth.uid == resource.data.userId) || isAdmin();
      allow update, delete: if isAdmin();
    }
  }
}
