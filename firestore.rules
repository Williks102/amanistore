rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role based on email.
    function isAdmin() {
      // The environment variable is not directly accessible here.
      // The admin email must be hardcoded or managed in a separate 'roles' collection.
      // For simplicity and to fix the immediate issue, we will hardcode it,
      // but a roles collection is the best practice.
      return request.auth.token.email == "lagopauline28@gmail.com";
    }

    // Shoes are publicly readable, but only writable by admins.
    match /shoes/{shoeId} {
      allow read, list: if true;
      allow write: if isAdmin();
    }

    // Categories are publicly readable, but only writable by admins.
    match /categories/{categoryId} {
      allow read, list: if true;
      allow write: if isAdmin();
    }

    // Users can only manage their own documents.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Orders can be created by any authenticated user.
    // They can only be read by the owner or an admin.
    // They can only be updated/deleted by an admin.
    match /orders/{orderId} {
      allow create: if request.auth != null;
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      // Allow admin to list all orders.
      // Allow user to list their own orders.
      allow list: if isAdmin() || (request.auth != null && request.query.where.userId == request.auth.uid);
      allow update, delete: if isAdmin();
    }

    // Promo codes can be read by any authenticated user (to validate them).
    // They can only be fully managed (listed, created, updated, deleted) by an admin.
    match /promoCodes/{promoCodeId} {
      allow get: if request.auth != null;
      allow list, write: if isAdmin();
    }
  }
}
