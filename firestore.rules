rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Publicly readable collections
    match /shoes/{shoeId} {
      allow read;
      allow write: if request.auth != null && request.auth.token.email == resource.data.adminEmail; // Example admin write rule
    }

    match /categories/{categoryId} {
      allow read;
      allow write: if request.auth != null && request.auth.token.email == resource.data.adminEmail; // Example admin write rule
    }

    match /collections/{collectionId} {
      allow read;
      allow write: if request.auth != null && request.auth.token.email == resource.data.adminEmail; // Example admin write rule
    }
    
    match /promoCodes/{promoId} {
      allow get: if true;
      allow list, create, update, delete: if request.auth != null && request.auth.token.email == resource.data.adminEmail;
    }

    // User-specific data
    match /users/{userId} {
      // Users can read and write their own data.
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /orders/{orderId} {
        // Allow user to create order
        allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
        // Allow user to read their own orders
        allow read: if request.auth != null && request.auth.uid == resource.data.userId;
        // Allow admin to update status
        allow update: if request.auth != null && request.auth.token.email == resource.data.adminEmail;
    }
  }
}
